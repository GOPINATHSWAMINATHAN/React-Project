{"ast":null,"code":"var _jsxFileName = \"/Users/gopi.s/Desktop/mosaic/mosaic-react-assessment/mosaic-front-end/src/App.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport Students from \"./students/Students\";\nimport SearchName from \"./students/NameSearch\";\nimport SearchTag from \"./students/SearchTag\";\nimport { CCard } from '@coreui/react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [studentData, setStudentData] = useState([]);\n  const [studentNameFilter, setStudentNameFilter] = useState(\"\");\n  const [tagFilter, setTagFilter] = useState(\"\"); // -----------------API call\n\n  async function fetchURL(url) {\n    const response = await fetch(url);\n    const data = await response.json();\n    const students = data.students;\n    students.forEach(student => {\n      student.tags = [];\n    });\n    setStudentData(students);\n  } //--------------- USE EFFECT\n\n\n  useEffect(() => {\n    fetchURL(`https://api.hatchways.io/assessment/students`);\n  }, []); // -------------- Average Grade\n\n  function findAverage(array) {\n    let sum = 0;\n\n    for (let i = 0; i < array.length; i++) {\n      sum += parseInt(array[i]);\n    }\n\n    let totalAverage = sum / array.length;\n    return totalAverage;\n  } // --------------- Name Search\n\n\n  const nameFilter = filterString => {\n    if (filterString && filterString.toLowerCase) {\n      filterString = filterString.toLowerCase();\n    }\n\n    let filtered = [];\n    studentData.forEach(student => {\n      const fullName = `${student.firstName} ${student.lastName}`.toLowerCase();\n\n      if (!filterString || fullName.includes(filterString)) {\n        filtered.push(student);\n      }\n    });\n    return filtered;\n  }; //----------------- Adding a Tag\n\n\n  const createTagForStudent = (student, newTag) => {\n    student.tags.push(newTag);\n    const indexOfStudent = studentData.findIndex(s => s.id === student.id);\n    let studentDataWithChanges = [...studentData.slice(0, indexOfStudent), student, ...studentData.slice(indexOfStudent + 1)];\n    setStudentData(studentDataWithChanges);\n  }; // ------------------- Search Tags\n\n\n  const searchTags = tagInput => {\n    if (tagInput && tagInput.toLowerCase) {\n      tagInput = tagInput.toLowerCase();\n    }\n\n    let searchTagsArray = [];\n    studentData.forEach(student => {\n      let tagExists = false;\n      student.tags.forEach(t => {\n        if (t.toLowerCase().includes(tagInput)) {\n          tagExists = true;\n        }\n      });\n\n      if (!tagInput || tagExists) {\n        searchTagsArray.push(student);\n      }\n    });\n    return searchTagsArray;\n  };\n\n  const filteredByNameStudents = nameFilter(studentNameFilter);\n  const filteredByTagStudents = searchTags(tagFilter);\n  const combinedFilteredStudents = []; //-------------- Combine Search Arrays\n\n  filteredByNameStudents.forEach(student => {\n    if (filteredByTagStudents.includes(student)) {\n      combinedFilteredStudents.push(student);\n    }\n  }); //------------------- Return\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: /*#__PURE__*/_jsxDEV(CCard, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"searchName\",\n        fontFamily: \"Raleway\",\n        fontSize: \"100px\",\n        children: /*#__PURE__*/_jsxDEV(SearchName, {\n          handleNameSearch: setStudentNameFilter,\n          placeholder: \"Search by name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"searchTag\",\n        fontFamily: \"Raleway\",\n        children: /*#__PURE__*/_jsxDEV(SearchTag, {\n          handleSearchTag: setTagFilter,\n          placeholder: \"Search by tag\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\" \", /*#__PURE__*/_jsxDEV(Students, {\n          students: combinedFilteredStudents,\n          handleAverage: findAverage,\n          createTagForStudent: createTagForStudent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 8\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"hsfUPi7vBcnfP/lVy8xR8Kp661Y=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/gopi.s/Desktop/mosaic/mosaic-react-assessment/mosaic-front-end/src/App.js"],"names":["React","useState","useEffect","Students","SearchName","SearchTag","CCard","App","studentData","setStudentData","studentNameFilter","setStudentNameFilter","tagFilter","setTagFilter","fetchURL","url","response","fetch","data","json","students","forEach","student","tags","findAverage","array","sum","i","length","parseInt","totalAverage","nameFilter","filterString","toLowerCase","filtered","fullName","firstName","lastName","includes","push","createTagForStudent","newTag","indexOfStudent","findIndex","s","id","studentDataWithChanges","slice","searchTags","tagInput","searchTagsArray","tagExists","t","filteredByNameStudents","filteredByTagStudents","combinedFilteredStudents"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useState, useEffect } from \"react\";\nimport Students from \"./students/Students\";\nimport SearchName from \"./students/NameSearch\";\nimport SearchTag from \"./students/SearchTag\";\nimport { CCard } from '@coreui/react';\n\nconst App = () => {\n  const [studentData, setStudentData] = useState([]);\n  const [studentNameFilter, setStudentNameFilter] = useState(\"\");\n  const [tagFilter, setTagFilter] = useState(\"\");\n\n  // -----------------API call\n\n  async function fetchURL(url) {\n    const response = await fetch(url);\n    const data = await response.json();\n    const students = data.students;\n    students.forEach((student) => {\n      student.tags = [];\n    });\n    setStudentData(students);\n  }\n\n  //--------------- USE EFFECT\n\n  useEffect(() => {\n    fetchURL(`https://api.hatchways.io/assessment/students`);\n  }, []);\n\n  // -------------- Average Grade\n\n  function findAverage(array) {\n    let sum = 0;\n    for (let i = 0; i < array.length; i++) {\n      sum += parseInt(array[i]);\n    }\n    let totalAverage = sum / array.length;\n    return totalAverage;\n  }\n\n  // --------------- Name Search\n\n  const nameFilter = (filterString) => {\n    if (filterString && filterString.toLowerCase) {\n      filterString = filterString.toLowerCase();\n    }\n    let filtered = [];\n    studentData.forEach((student) => {\n      const fullName = `${student.firstName} ${student.lastName}`.toLowerCase();\n\n      if (!filterString || fullName.includes(filterString)) {\n        filtered.push(student);\n      }\n    });\n    return filtered;\n  };\n\n  //----------------- Adding a Tag\n\n  const createTagForStudent = (student, newTag) => {\n    student.tags.push(newTag);\n\n    const indexOfStudent = studentData.findIndex((s) => s.id === student.id);\n    let studentDataWithChanges = [\n      ...studentData.slice(0, indexOfStudent),\n      student,\n      ...studentData.slice(indexOfStudent + 1),\n    ];\n    setStudentData(studentDataWithChanges);\n  };\n\n  // ------------------- Search Tags\n\n  const searchTags = (tagInput) => {\n    if (tagInput && tagInput.toLowerCase) {\n      tagInput = tagInput.toLowerCase();\n    }\n\n    let searchTagsArray = [];\n    studentData.forEach((student) => {\n      let tagExists = false;\n      student.tags.forEach((t) => {\n        if (t.toLowerCase().includes(tagInput)) {\n          tagExists = true;\n        }\n      });\n\n      if (!tagInput || tagExists) {\n        searchTagsArray.push(student);\n      }\n    });\n    return searchTagsArray;\n  };\n\n  const filteredByNameStudents = nameFilter(studentNameFilter);\n  const filteredByTagStudents = searchTags(tagFilter);\n  const combinedFilteredStudents = [];\n\n  //-------------- Combine Search Arrays\n\n  filteredByNameStudents.forEach((student) => {\n    if (filteredByTagStudents.includes(student)) {\n      combinedFilteredStudents.push(student);\n    }\n  });\n\n  //------------------- Return\n\n  return (\n    \n    <div className=\"container\">\n       <CCard>\n      <div className=\"searchName\" fontFamily=\"Raleway\" fontSize=\"100px\">\n        <SearchName\n          handleNameSearch={setStudentNameFilter}\n          placeholder=\"Search by name\"\n        />\n      </div>\n      <div className=\"searchTag\" fontFamily=\"Raleway\">\n        <SearchTag handleSearchTag={setTagFilter} placeholder=\"Search by tag\" />\n      </div>\n      <div>\n        {\" \"}\n        <Students\n          students={combinedFilteredStudents}\n          handleAverage={findAverage}\n          createTagForStudent={createTagForStudent}\n        />\n       \n        \n      </div>\n\n      </CCard> \n              \n    </div>\n    \n  );\n};\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}