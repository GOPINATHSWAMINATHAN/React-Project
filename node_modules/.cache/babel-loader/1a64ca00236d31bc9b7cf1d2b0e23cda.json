{"ast":null,"code":"var _jsxFileName = \"/Users/gopi.s/Desktop/mosaic/mosaic-react-assessment/mosaic-front-end/src/students/GetStudent.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst GetStudent = _ref => {\n  _s();\n\n  let {\n    id,\n    img,\n    firstName,\n    lastName,\n    email,\n    company,\n    skill,\n    average,\n    grades,\n    student,\n    createTagForStudent,\n    tag\n  } = _ref;\n  const [showGrades, setShowGrades] = useState(false);\n  const [newTagName, setNewTagName] = useState(\"\");\n  const fullName = `${firstName} ${lastName}`; // ADD TAG TO THE STUDENTS\n\n  function saveTag() {\n    createTagForStudent(student, newTagName);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"getStudent\",\n    style: {\n      flex: \"3\",\n      display: \"flex\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: img,\n      className: \"img\",\n      alt: \"avatar\",\n      width: \"100\",\n      height: \"100\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\" \", fullName]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button\",\n      onClick: () => {\n        setShowGrades(!showGrades);\n      },\n      children: showGrades ? \"-\" : \"+\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info\",\n        children: [\" Email: \", email, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info\",\n        children: [\" Company: \", company, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info\",\n        children: [\" Skill: \", skill, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"info\",\n        children: [\" Average: \", average, \"%\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: showGrades && grades.map((grade, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"testItem\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\" \", \"Test \", index + 1, \" : \", grade, \"%\", \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 17\n          }, this)\n        }, grade + \" \" + index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 15\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"tagContainer\",\n      children: [\" \", // SHOWS THE TAG FOR INDIVIDUAL STUDENT\n      student.tags.map((tag, index) => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"tags\",\n          children: tag\n        }, student.id + \" \" + tag, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 15\n        }, this);\n      })]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"input\", {\n        // TO GENERATE TAG BUTTON UPON CLICKING ENTER\n        onChange: event => {\n          setNewTagName(event.target.value);\n        },\n        onKeyUp: event => {\n          if (event.key === \"Enter\") {\n            saveTag();\n            event.target.value = \"\";\n          }\n        },\n        type: \"text\",\n        placeholder: \"Add a tag\",\n        className: \"tagAdder\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n\n_s(GetStudent, \"7hBcJP0Nv1kNRsoGE3Q0TxJNYOo=\");\n\n_c = GetStudent;\nexport default GetStudent;\n\nvar _c;\n\n$RefreshReg$(_c, \"GetStudent\");","map":{"version":3,"sources":["/Users/gopi.s/Desktop/mosaic/mosaic-react-assessment/mosaic-front-end/src/students/GetStudent.js"],"names":["React","useState","GetStudent","id","img","firstName","lastName","email","company","skill","average","grades","student","createTagForStudent","tag","showGrades","setShowGrades","newTagName","setNewTagName","fullName","saveTag","flex","display","map","grade","index","tags","event","target","value","key"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\n\nconst GetStudent = ({\n  id,\n  img,\n  firstName,\n  lastName,\n  email,\n  company,\n  skill,\n  average,\n  grades,\n  student,\n  createTagForStudent,\n  tag,\n}) => {\n  const [showGrades, setShowGrades] = useState(false);\n  const [newTagName, setNewTagName] = useState(\"\");\n\n  const fullName = `${firstName} ${lastName}`;\n\n  // ADD TAG TO THE STUDENTS\n\n  function saveTag() {\n    createTagForStudent(student, newTagName);\n  }\n\n  return (\n    <div className=\"getStudent\" style={{flex:\"3\",display:\"flex\"}}>\n      <img src={img} className=\"img\" alt=\"avatar\" width=\"100\" height=\"100\" />\n      <div className=\"name\"></div>\n      <h2> {fullName}</h2>\n      <button\n        className=\"button\"\n        onClick={() => {\n          setShowGrades(!showGrades);\n        }}\n      >\n        {showGrades ? \"-\" : \"+\"}\n      </button>\n      <div>\n        <div className=\"info\"> Email: {email} </div>\n        <div className=\"info\"> Company: {company} </div>\n        <div className=\"info\"> Skill: {skill} </div>\n        <div className=\"info\"> Average: {average}%</div>\n      </div>\n      <div>\n        {showGrades &&\n          grades.map((grade, index) => {\n            return (\n              <div className=\"testItem\" key={grade + \" \" + index}>\n                <div>\n                  {\" \"}\n                  Test {index + 1} : {grade}%{\" \"}\n                </div>\n              </div>\n            );\n          })}\n      </div>\n      <div className=\"tagContainer\">\n        {\" \"}\n        {\n          // SHOWS THE TAG FOR INDIVIDUAL STUDENT\n          student.tags.map((tag, index) => {\n            return (\n              <div className=\"tags\" key={student.id + \" \" + tag}>\n                {tag}\n              </div>\n            );\n          })\n        }\n      </div>\n      <div>\n        <input // TO GENERATE TAG BUTTON UPON CLICKING ENTER\n          onChange={(event) => {\n            setNewTagName(event.target.value);\n          }}\n          onKeyUp={(event) => {\n            if (event.key === \"Enter\") {\n              saveTag();\n              event.target.value = \"\";\n            }\n          }}\n          type=\"text\"\n          placeholder=\"Add a tag\"\n          className=\"tagAdder\"\n        />\n      </div>\n\n      <hr></hr>\n    </div>\n  );\n};\n\nexport default GetStudent;\n"]},"metadata":{},"sourceType":"module"}